{"version":3,"file":"waterpipe.js","mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,oBAAoB;AACtH;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD,0BAA0B,6BAA6B;AACvD,0BAA0B,2BAA2B;AACrD,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,uCAAuC;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,mCAAmC;AACnC;AACA;AACA,mCAAmC;AACnC;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK,SAAS,IAAI,OAAO,MAAM,IAAI,MAAM,6BAA6B,aAAa,0GAA0G,aAAa;AAC9O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,sBAAsB,EAAE,sBAAsB,wDAAwD,WAAW,KAAK,KAAK,KAAK,IAAI,EAAE;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,6BAA6B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,SAAS;AAChF;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAiD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbmBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,oNAAoN,IAAI;AACxN;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtsCAAsC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,IAA0B;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+DAAe,SAAS,EAAC","sources":["webpack://waterpipe/webpack/universalModuleDefinition","webpack://waterpipe/./src/waterpipe.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"waterpipe\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"waterpipe\"] = factory();\n\telse\n\t\troot[\"waterpipe\"] = factory();\n})(this, function() {\nreturn ","const waterpipe = (function () {\r\n    'use strict';\r\n\r\n    var OP_EVAL = 1;\r\n    var OP_TEST = 2;\r\n    var OP_ITER_END = 3;\r\n    var OP_ITER = 4;\r\n    var OP_JUMP = 5;\r\n    var OP_SPACE = 6;\r\n    var OP_TEXT = 7;\r\n\r\n    var EVAL_STACK = 1;\r\n    var EVAL_ITER_KEY = 2;\r\n    var EVAL_ITER_INDEX = 3;\r\n    var EVAL_ITER_COUNT = 4;\r\n    var EVAL_GLOBAL = 5;\r\n    var EVAL_NOW = 6;\r\n    var EVAL_TODAY = 7;\r\n    var EVAL_RAND = 8;\r\n\r\n    var TOKEN_IF = 'if';\r\n    var TOKEN_IFNOT = 'if not';\r\n    var TOKEN_ELSE = 'else';\r\n    var TOKEN_ELSEIF = 'elseif';\r\n    var TOKEN_ELSEIFNOT = 'elseif not';\r\n    var TOKEN_FOREACH = 'foreach';\r\n\r\n    var NEWLINE = '\\r\\n';\r\n    var VOID_TAGS = 'area base br col command embed hr img input keygen link meta param source track wbr !doctype !--'.split(' ');\r\n    var CONSTANTS = {\r\n        'true': true,\r\n        'false': false,\r\n        'undefined': undefined,\r\n        'null': null,\r\n        '0': 0\r\n    };\r\n\r\n    var RegExp = /./.constructor;\r\n    var evalCount = 0;\r\n    var execStack = [];\r\n    var collator = typeof Intl !== 'undefined' && Intl.Collator && new Intl.Collator(undefined, { caseFirst: 'upper' });\r\n    var pipes = Object.create ? Object.create(null) : {};\r\n    var internals = {};\r\n\r\n    var compares = [\r\n        function (a, b) { return compare(a, b, 1); },\r\n        function (a, b) { return compare(a, b, 1, 1); },\r\n        function (a, b) { return compare(a, b, -1); },\r\n        function (a, b) { return compare(a, b, -1, 1); }\r\n    ];\r\n\r\n    function cached(fn, str) {\r\n        var cache = fn.cache = fn.cache || {};\r\n        return cache.hasOwnProperty(str) ? cache[str] : (cache[str] = fn(str));\r\n    }\r\n\r\n    function typeValue(str) {\r\n        if (CONSTANTS.hasOwnProperty(str)) {\r\n            return CONSTANTS[str];\r\n        }\r\n        return /^(NaN|-?(?:(?:\\d+|\\d*\\.\\d+)(?:[E|e][+|-]?\\d+)?|Infinity))$/.test(str) ? parseFloat(str) : str;\r\n    }\r\n\r\n    function asdate(obj) {\r\n        if (!evallable(obj) || obj instanceof Date) {\r\n            return obj;\r\n        }\r\n        if (typeof obj === 'number') {\r\n            return new Date(obj);\r\n        }\r\n        var str = string(obj);\r\n        obj = new Date(str);\r\n        if (!/\\d{2}:\\d{2}:\\d{2}/.test(str)) {\r\n            obj.setHours(0, 0, 0, 0);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    function slice() {\r\n        var length = arguments.length;\r\n        var arr = new Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            arr[i] = arguments[i];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    function isString(value) {\r\n        return typeof value === 'string';\r\n    }\r\n\r\n    function isObject(value) {\r\n        return typeof value === 'object';\r\n    }\r\n\r\n    function evallable(value) {\r\n        return value !== undefined && value !== null;\r\n    }\r\n\r\n    function primitive(value) {\r\n        return typeof value !== 'object' || value === null;\r\n    }\r\n\r\n    function hasProperty(value, name) {\r\n        if (!evallable(value) || isFunction(value[name])) {\r\n            return false;\r\n        }\r\n        if (!isObject(value)) {\r\n            return value[name] !== undefined;\r\n        }\r\n        return value.hasOwnProperty(name) || (Array.isArray(value) && /^\\d+$/.test(name));\r\n    }\r\n\r\n    function pass(value) {\r\n        return value;\r\n    }\r\n\r\n    function constFn(value) {\r\n        return function () {\r\n            return value;\r\n        };\r\n    }\r\n\r\n    function keyFn(key) {\r\n        return function (obj) {\r\n            return evallable(obj) ? obj[key] : undefined;\r\n        };\r\n    }\r\n\r\n    function detectKeyFn(varargs, arr) {\r\n        function isValidKey(key) {\r\n            return first(arr, function (v) {\r\n                return hasProperty(v, key);\r\n            }, true);\r\n        }\r\n        switch (varargs.state()) {\r\n            case 'func':\r\n                return varargs.fn();\r\n            case 'auto':\r\n                var key = varargs.raw();\r\n                var value = varargs.eval(key);\r\n                if (isString(value) && isValidKey(value)) {\r\n                    return cached(keyFn, value);\r\n                }\r\n                var fn = pipes[key];\r\n                if (fn && !fn.varargs && !isValidKey(key)) {\r\n                    return isFunction(fn) ? fn : function (v) {\r\n                        return run(fn, v);\r\n                    };\r\n                }\r\n                return cached(keyFn, key);\r\n        }\r\n        return cached(keyFn, string(varargs.next()));\r\n    }\r\n\r\n    function json(value) {\r\n        try {\r\n            return JSON.stringify(value);\r\n        } catch (e) {\r\n            return String(value);\r\n        }\r\n    }\r\n\r\n    function string(value, stringify) {\r\n        return !evallable(value) || value !== value || isFunction(value) ? '' : isString(value) ? value : (stringify || String)(value);\r\n    }\r\n\r\n    function repeat(str, count) {\r\n        return new Array((+count || 0) + 1).join(string(str));\r\n    }\r\n\r\n    function indent(str, level, start) {\r\n        if (typeof str === 'number') {\r\n            str = repeat(' ', str);\r\n        }\r\n        return (start || '') + repeat(str, level);\r\n    }\r\n\r\n    function reverseIndex(v, i) {\r\n        return ((v || '').length || 0) - (+i || 0) - 1;\r\n    }\r\n\r\n    function parseTimeRange(str) {\r\n        var dir = 1;\r\n        if (str[0] === '+' || str[0] === '-') {\r\n            dir = str[0] === '-' ? -1 : 1;\r\n            str = str.slice(1);\r\n        }\r\n        var args = [0, 0, 0, 0, 0, 0, 0];\r\n        var m, re = /(\\d+)([yMwdhms])/g;\r\n        while ((m = re.exec(str)) !== null) {\r\n            if (m[2] === 'w') {\r\n                args[2] += parseInt(m[1]) * 7 * dir;\r\n            } else {\r\n                args['yMdhms'.indexOf(m[2])] += parseInt(m[1]) * dir;\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n\r\n    function parseRegExp(str) {\r\n        return str.charAt(0) === '/' && /\\/((?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+)\\/((?:g(?:im?|mi?)?|i(?:gm?|mg?)?|m(?:gi?|ig?)?)?)/g.test(str) && new RegExp(RegExp.$1, RegExp.$2);\r\n    }\r\n\r\n    function parseObjectPath(str) {\r\n        var t = [];\r\n        var m, r = /((?!^)\\$)?([^$.()][^.]*)|\\$\\(([^)]+)\\)/ig;\r\n        while ((m = r.exec(str)) !== null) {\r\n            t.push(m[1] || m[3] ? cached(parseObjectPath, m[3] || m[2]) : m[2][0] === '^' ? { fn: reverseIndex, arg: m[2].slice(1) } : m[2]);\r\n        }\r\n        if (!t.length) {\r\n            t[0] = str;\r\n        }\r\n        switch (t[0]) {\r\n            case '.':\r\n            case '@0':\r\n                t.evalMode = EVAL_STACK;\r\n                break;\r\n            case '#':\r\n            case '#key':\r\n                t.evalMode = EVAL_ITER_KEY;\r\n                break;\r\n            case '##':\r\n            case '#index':\r\n                t.evalMode = EVAL_ITER_INDEX;\r\n                break;\r\n            case '#count':\r\n                t.evalMode = EVAL_ITER_COUNT;\r\n                break;\r\n            case '_':\r\n            case '@root':\r\n                t.evalMode = EVAL_STACK;\r\n                t.stackIndex = -1;\r\n                break;\r\n            case '@global':\r\n                t.evalMode = EVAL_GLOBAL;\r\n                break;\r\n            case '@now':\r\n                t.evalMode = EVAL_NOW;\r\n                break;\r\n            case '@today':\r\n                t.evalMode = EVAL_TODAY;\r\n                break;\r\n            case '@random':\r\n                t.evalMode = EVAL_RAND;\r\n                break;\r\n            default:\r\n                if (/^@(\\d+)$/.test(t[0])) {\r\n                    t.evalMode = EVAL_STACK;\r\n                    t.stackIndex = +RegExp.$1;\r\n                }\r\n        }\r\n        return t;\r\n    }\r\n\r\n    function escape(str, preserveEntity) {\r\n        var re = preserveEntity ? /[\"'<>]|&(?!#\\d+;|[a-z][a-z0-9]+;)/i : /[\"'&<>]/;\r\n        if (!re.exec(str)) {\r\n            return str;\r\n        }\r\n        var html = '';\r\n        var index = 0;\r\n        var lastIndex = 0;\r\n        for (index = re.lastIndex; index < str.length; index++) {\r\n            var escape;\r\n            switch (str.charCodeAt(index)) {\r\n                case 34: // \"\r\n                    escape = '&quot;';\r\n                    break;\r\n                case 38: // &\r\n                    escape = '&amp;';\r\n                    break;\r\n                case 39: // '\r\n                    escape = '&#39;';\r\n                    break;\r\n                case 60: // <\r\n                    escape = '&lt;';\r\n                    break;\r\n                case 62: // >\r\n                    escape = '&gt;';\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n            if (lastIndex !== index) {\r\n                html += str.substring(lastIndex, index);\r\n            }\r\n            lastIndex = index + 1;\r\n            html += escape;\r\n        }\r\n        return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n    }\r\n\r\n    function hyphenate(str) {\r\n        return string(str).replace(/[A-Z](?:[A-Z]+(?=$|[A-Z]))?/g, function (v, i) {\r\n            return (i > 0 ? '-' : '') + v.toLowerCase();\r\n        });\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var i, len;\r\n        if (obj && typeof obj.length === 'number' && obj.length >= 0) {\r\n            for (i = 0, len = obj.length; i < len; i++) {\r\n                if (callback(i, obj[i]) === false) {\r\n                    return;\r\n                }\r\n            }\r\n        } else if (obj && isObject(obj)) {\r\n            var arr = Object.getOwnPropertyNames(obj);\r\n            for (i = 0, len = arr.length; i < len; i++) {\r\n                if (callback(arr[i], obj[arr[i]]) === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function flatten(src) {\r\n        var dst = [];\r\n        for (var i = 0, len = src.length; i < len; i++) {\r\n            if (Array.isArray(src[i])) {\r\n                for (var j = 0, src2 = src[i], len2 = src2.length; j < len2; j++) {\r\n                    if (src2[j] !== undefined && src2[j] !== null) {\r\n                        dst[dst.length] = src2[j];\r\n                    }\r\n                }\r\n            } else if (src[i] !== undefined && src[i] !== null) {\r\n                dst[dst.length] = src[i];\r\n            }\r\n        }\r\n        return dst;\r\n    }\r\n\r\n    function extend() {\r\n        var args = slice.apply(null, arguments);\r\n        for (var i = 1, len = args.length; i < len; i++) {\r\n            for (var prop in args[i]) {\r\n                args[0][prop] = args[i][prop];\r\n            }\r\n        }\r\n        return args[0];\r\n    }\r\n\r\n    function where(arr, filter, map) {\r\n        if (!evallable(arr)) {\r\n            return arr;\r\n        }\r\n        var result = Array.isArray(arr) ? [] : {};\r\n        each(arr, function (i, v) {\r\n            if (filter(v, i)) {\r\n                result[arr.push ? result.length : i] = (map || pass)(v, i);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function first(arr, fn, returnValue, negate) {\r\n        var result;\r\n        each(arr, function (i, v) {\r\n            if (negate ^ !!fn(v, i)) {\r\n                result = returnValue || v;\r\n                return false;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function keys(obj) {\r\n        var keys = [];\r\n        each(obj, function (i) {\r\n            keys.push(i);\r\n        });\r\n        return keys;\r\n    }\r\n\r\n    function compare(a, b, dir, ignoreCase) {\r\n        if (Array.isArray(a) && Array.isArray(b)) {\r\n            var result;\r\n            for (var i = 0, len = Math.min(a.length, b.length); i < len && !result; i++) {\r\n                result = compare(a[i], b[i], dir, ignoreCase);\r\n            }\r\n            return result || a.length - b.length;\r\n        }\r\n        if (a === b) {\r\n            return 0;\r\n        }\r\n        var x = !evallable(a) && -1;\r\n        var y = !evallable(b) && 1;\r\n        if (x || y) {\r\n            return (x + y) * dir;\r\n        }\r\n        if (isString(a) || isString(b)) {\r\n            a = string(a);\r\n            b = string(b);\r\n            if (ignoreCase) {\r\n                /* istanbul ignore else */\r\n                if (collator) {\r\n                    return collator.compare(a, b) * dir;\r\n                } else {\r\n                    a = a.toLowerCase();\r\n                    b = b.toLowerCase();\r\n                }\r\n            }\r\n            return (a > b ? 1 : a < b ? -1 : 0) * dir;\r\n        }\r\n        return (a - b) * dir;\r\n    }\r\n\r\n    function sortby(arr, varargs, compare) {\r\n        var result = Array.isArray(arr) ? new Array(arr.length) : {};\r\n        var fn = detectKeyFn(varargs, arr);\r\n        if (!evallable(arr)) {\r\n            return arr;\r\n        }\r\n        var tmp = [];\r\n        each(arr, function (i, v) {\r\n            tmp.push([i, v, fn(v, i)]);\r\n        });\r\n        tmp.sort(function (a, b) {\r\n            return compare(a[2], b[2]);\r\n        });\r\n        each(tmp, function (i, v) {\r\n            result[arr.push ? i : v[0]] = v[1];\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function inherit(base, values) {\r\n        function Anonymous() {}\r\n        Anonymous.prototype = base;\r\n        return extend(new Anonymous(), values);\r\n    }\r\n\r\n    function formatCallSite(str, start, end, cstart, cend) {\r\n        var arr = str.substr(0, cstart || start).split('\\n').reverse();\r\n        var lineStart = str.substring(str.lastIndexOf('\\n', start) + 1, start).replace(/^\\s+/, '').substr(-20);\r\n        var line = str.substring(start, str.indexOf('\\n', end) + 1 || str.length).replace(/\\r?\\n|\\s+$/g, '').substr(0, end - start + 20);\r\n        return waterpipe('at line {{$0}} column {{$1}}:\\n\\t{{$2}}{{$3}}\\n\\t{{$2.length + $4 repeat \" \"}}{{$5 repeat ^}}', [arr.length, arr[0].length + 1, lineStart, line, cstart - start || 0, cend - cstart || end - start], { html: false });\r\n    }\r\n\r\n    function strargs(fn) {\r\n        return function (str, needle) {\r\n            return fn(string(str), string(needle));\r\n        };\r\n    }\r\n\r\n    function Pipe(str, index) {\r\n        this.value = str;\r\n        this.index = index;\r\n    }\r\n    Pipe.prototype = [];\r\n\r\n    function PipeArgument(prev, str, start, end, canEvaluate) {\r\n        var self = this;\r\n        self.textValue = str;\r\n        self.value = typeValue(str);\r\n        self.canEvaluate = self.value === self.textValue && canEvaluate;\r\n        self.start = start;\r\n        self.end = end;\r\n        if (prev) {\r\n            prev.next = self;\r\n        }\r\n    }\r\n    PipeArgument.prototype.objectPath = function () {\r\n        return (this.objectPath = constFn(cached(parseObjectPath, this.textValue.replace(/^\\$(?!\\()/, '')))).call();\r\n    };\r\n    PipeArgument.prototype.length = function () {\r\n        if (this.value === '[' && this.canEvaluate === undefined) {\r\n            for (var t = this.next, i = 1, count = 1; t; t = t.next, i++) {\r\n                if (t.value === '[') {\r\n                    count++;\r\n                } else if (t.value === ']' && t.canEvaluate === undefined && --count === 0) {\r\n                    return (this.length = constFn(i)).call();\r\n                }\r\n            }\r\n        }\r\n        this.length = function () {};\r\n    };\r\n\r\n    function parsePipe(str, index) {\r\n        var t = new Pipe(str, index || 0);\r\n        var n, r = /\"(\"|(?:[^\"\\\\]|\\\\.|\"\\S)*)\"(?=\\s|$)|`(\\S+)|([^\\s\\\\]|\\\\.)(?:[^\\s\\\\]|\\\\.)*/ig;\r\n        while ((n = r.exec(str)) !== null) {\r\n            t.unshift(new PipeArgument(t[0], n[2] || (n[1] !== undefined ? n[1] : n[0]), t.index + n.index, t.index + r.lastIndex, n[2] || n[1] !== undefined ? false : n[3] === '$' ? true : undefined));\r\n        }\r\n        return t.reverse();\r\n    }\r\n\r\n    function parse(str) {\r\n        var tokens = [];\r\n        var controlStack = [{}];\r\n        var htmlStack = [];\r\n        var lastIndex = 0;\r\n        var lastIndentWS = '';\r\n        var m, r = /\\{\\{([\\/!]|foreach(?=\\s|\\})|if(?:\\snot)?(?=\\s)|else(?:if(?:\\snot)?(?=\\s))?|&?(?!\\}))\\s*((?:\\}(?!\\})|[^}])*\\}*)\\}\\}/g;\r\n\r\n        function assert(result) {\r\n            if (!result) {\r\n                throw new Error('Unexpected ' + m[0] + ' ' + formatCallSite(str, m.index, r.lastIndex));\r\n            }\r\n        }\r\n\r\n        function getPipe(str) {\r\n            return parsePipe(str, m.index + m[0].indexOf(str));\r\n        }\r\n\r\n        function parseHTML(str, htmlStackCount) {\r\n            var start = tokens.length;\r\n            var m, r = /<(\\/?)((?:[0-9a-z]+:)?[0-9a-z]+|!doctype|!--)|\\/?>|-->|([^\\s=\\/<>\"0-9.-][^\\s=\\/<>\"]*)(?:=\"|$|(?=[\\s=\\/<>\"]))|\"|(\\s+)/ig;\r\n            var lastIndex = 0;\r\n\r\n            function isScriptOrStyle() {\r\n                return (htmlStack[0].opened && (htmlStack[0].tagName === 'script' || htmlStack[0].tagName === 'style')) || htmlStack[0].tagName === '!--';\r\n            }\r\n\r\n            function shiftHtmlStack() {\r\n                return htmlStack.length > (controlStack[0].htmlStackCount || 1) && htmlStack.shift();\r\n            }\r\n\r\n            function writeText(str, stripWS, nstr) {\r\n                if (isScriptOrStyle()) {\r\n                    tokens.push({\r\n                        op: OP_TEXT,\r\n                        value: str,\r\n                        ovalue: str,\r\n                        nvalue: str\r\n                    });\r\n                    return;\r\n                }\r\n                var attrName = htmlStack[0].attrName;\r\n                var opened = htmlStack[0].opened;\r\n                if (nstr === undefined) {\r\n                    nstr = str;\r\n                }\r\n                if (stripWS || attrName || opened) {\r\n                    var last1 = tokens[tokens.length - 1];\r\n                    var last2 = tokens[tokens.length - 2];\r\n                    var newline;\r\n                    var ostr = str;\r\n                    if (!stripWS) {\r\n                        newline = str.indexOf('\\n') >= 0;\r\n                        ostr = str = str.replace(/^\\s+/g, (opened && (!last1 || last1.op !== OP_SPACE)) || (attrName && htmlStack[0].text) ? ' ' : '');\r\n                        str = attrName ? str : escape(str, true);\r\n                        newline &= (!str || str === ' ');\r\n                    } else {\r\n                        ostr = str.replace(/^\\s+/, '');\r\n                        nstr = nstr.replace(/^\\s+/, '');\r\n                    }\r\n                    htmlStack[0].text += str;\r\n                    if (newline) {\r\n                        if (last1) {\r\n                            last1.stripWSEnd = false;\r\n                        }\r\n                        tokens.push({\r\n                            op: OP_SPACE,\r\n                            value: NEWLINE,\r\n                            ovalue: nstr\r\n                        });\r\n                        return;\r\n                    }\r\n                    if (str && ((htmlStack[1] && opened) || str !== ' ')) {\r\n                        var isTagEnd = str[str.length - 1] === '>';\r\n                        if (tokens.length > start && last1.op === OP_TEXT) {\r\n                            last1.value += str;\r\n                            last1.ovalue += ostr;\r\n                            last1.nvalue += nstr;\r\n                            last1.isTagEnd = isTagEnd;\r\n                            last1.stripWSEnd = stripWS;\r\n                        } else if (tokens.length > start + 1 && last2.op === OP_TEXT && last1.value !== NEWLINE) {\r\n                            var ch = (str[0] === '<' || last2.isTagEnd || (!stripWS && !last2.stripWSEnd)) ? last1.value : '';\r\n                            last2.value += ch + str;\r\n                            last2.ovalue += last1.ovalue + ostr;\r\n                            last2.nvalue += last1.ovalue + nstr;\r\n                            last2.isTagEnd = isTagEnd;\r\n                            last2.stripWSEnd = stripWS;\r\n                            tokens.pop();\r\n                        } else {\r\n                            tokens.push({\r\n                                op: OP_TEXT,\r\n                                stripWS: stripWS,\r\n                                stripWSEnd: stripWS,\r\n                                isTagEnd: isTagEnd,\r\n                                value: str,\r\n                                ovalue: ostr,\r\n                                nvalue: nstr,\r\n                                indent: htmlStack.length - 2 + !!htmlStack[0].opened\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                tokens.push({\r\n                    op: OP_SPACE,\r\n                    value: ' ',\r\n                    ovalue: nstr\r\n                });\r\n            }\r\n\r\n            while ((m = r.exec(str)) !== null) {\r\n                if (lastIndex !== m.index) {\r\n                    writeText(str.substring(lastIndex, m.index));\r\n                }\r\n                lastIndex = r.lastIndex;\r\n\r\n                switch (m[0].charAt(0)) {\r\n                    case '<':\r\n                        if (isScriptOrStyle() && (!m[1] || m[2].toLowerCase() !== htmlStack[0].tagName)) {\r\n                            writeText(m[0], true);\r\n                        } else {\r\n                            while (VOID_TAGS.indexOf(htmlStack[0].tagName) >= 0 && shiftHtmlStack());\r\n                            if (m[1]) {\r\n                                if (htmlStack[0].tagName !== m[2] || htmlStack.length <= (controlStack[0].htmlStackCount || 1)) {\r\n                                    htmlStack[0].muteTagEnd = true;\r\n                                    htmlStack[0].opened = undefined;\r\n                                } else {\r\n                                    htmlStack[0].opened = false;\r\n                                    writeText(m[0], true);\r\n                                }\r\n                            } else {\r\n                                htmlStack.unshift({\r\n                                    tagName: m[2].toLowerCase(),\r\n                                    text: ''\r\n                                });\r\n                                writeText(m[0].toLowerCase(), true);\r\n                                htmlStack[0].index = tokens.length - 1;\r\n                            }\r\n                        }\r\n                        continue;\r\n                    case '>':\r\n                    case '/':\r\n                    case '-':\r\n                        if (htmlStack[0].tagName && (!htmlStack[0].opened || m[0] === '/>' || m[0] === '-->')) {\r\n                            if (htmlStack[0].muteTagEnd) {\r\n                                htmlStack[0].muteTagEnd = false;\r\n                            } else {\r\n                                writeText(m[0], true);\r\n                            }\r\n                            if ((htmlStack[0].opened !== false && m[0] !== '/>' && m[0] !== '-->') || !shiftHtmlStack()) {\r\n                                htmlStack[0].opened = true;\r\n                            }\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    case '\"':\r\n                        if (htmlStack[0].attrName && shiftHtmlStack()) {\r\n                            writeText(m[0], true);\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (htmlStack[0].tagName && !m[4]) {\r\n                            if (htmlStack[0].tagName !== '!--' && !htmlStack[0].opened) {\r\n                                writeText(' ' + m[0], true);\r\n                                if (m[0].indexOf('=') >= 0) {\r\n                                    htmlStack.unshift({\r\n                                        attrName: m[3],\r\n                                        text: ''\r\n                                    });\r\n                                }\r\n                                continue;\r\n                            }\r\n                        } else if (htmlStack[0].attrName) {\r\n                            if (m[0][m[0].length - 1] === '\"') {\r\n                                writeText(m[0].slice(0, -1));\r\n                                shiftHtmlStack();\r\n                                writeText('\"', true);\r\n                                continue;\r\n                            }\r\n                        }\r\n                }\r\n                writeText(m[0]);\r\n            }\r\n            if (lastIndex !== str.length) {\r\n                writeText(str.substr(lastIndex));\r\n            }\r\n            while (htmlStack[htmlStackCount]) {\r\n                var tagName = htmlStack.shift().tagName;\r\n                if (VOID_TAGS.indexOf(tagName) < 0) {\r\n                    writeText('</' + tagName + '>', true, '');\r\n                }\r\n            }\r\n        }\r\n\r\n        str = string(str).replace(/^\\r?\\n/, '');\r\n        htmlStack.unshift({\r\n            opened: true,\r\n            text: ''\r\n        });\r\n        while ((m = r.exec(str)) !== null) {\r\n            if (lastIndex !== m.index) {\r\n                var cur = str.substring(lastIndex, m.index);\r\n                if (/^([^\\S\\r\\n]*(\\r?\\n[^\\S\\r\\n]*))(\\S?)/.test(cur)) {\r\n                    cur = RegExp.$2.slice(lastIndentWS.length) + cur.slice(RegExp.$1.length);\r\n                    if (RegExp.$3) {\r\n                        tokens.push({\r\n                            op: OP_SPACE,\r\n                            value: NEWLINE,\r\n                            ovalue: ''\r\n                        });\r\n                    }\r\n                }\r\n                lastIndentWS = /(\\r?\\n[^\\S\\r\\n]*)?$/.test(cur) && RegExp.$1 || '';\r\n                parseHTML(cur);\r\n            } else {\r\n                lastIndentWS = '';\r\n            }\r\n            lastIndex = r.lastIndex;\r\n\r\n            switch (m[1]) {\r\n                case '!':\r\n                    break;\r\n                case '/':\r\n                    assert(controlStack[0] && m[2] === controlStack[0].tokenName);\r\n                    parseHTML('', controlStack[0].htmlStackCount);\r\n                    controlStack[0].token.index = tokens.length;\r\n                    if (controlStack[0].tokenIf && !controlStack[0].tokenIf.index) {\r\n                        controlStack[0].tokenIf.index = tokens.length;\r\n                    }\r\n                    if (m[2] === TOKEN_FOREACH) {\r\n                        tokens.push({\r\n                            op: OP_ITER_END,\r\n                            index: controlStack[0].tokenIndex + 1\r\n                        });\r\n                    }\r\n                    controlStack.shift();\r\n                    break;\r\n                case TOKEN_IF:\r\n                case TOKEN_IFNOT:\r\n                    controlStack.unshift({\r\n                        htmlStackCount: htmlStack.length,\r\n                        tokenIndex: tokens.length,\r\n                        tokenName: TOKEN_IF,\r\n                        token: {\r\n                            op: OP_TEST,\r\n                            condition: getPipe(m[2]),\r\n                            negate: m[1] === TOKEN_IFNOT\r\n                        }\r\n                    });\r\n                    tokens.push(controlStack[0].token);\r\n                    break;\r\n                case TOKEN_ELSE:\r\n                case TOKEN_ELSEIF:\r\n                case TOKEN_ELSEIFNOT:\r\n                    assert(controlStack[0] && controlStack[0].tokenName === TOKEN_IF);\r\n                    parseHTML('', controlStack[0].htmlStackCount);\r\n                    var previousControl = controlStack.splice(0, 1, {\r\n                        htmlStackCount: controlStack[0].htmlStackCount,\r\n                        tokenIndex: tokens.length,\r\n                        tokenName: TOKEN_IF,\r\n                        token: {\r\n                            op: OP_JUMP\r\n                        }\r\n                    })[0];\r\n                    (previousControl.tokenIf || previousControl.token).index = tokens.length + 1;\r\n                    if (previousControl.token.op === OP_JUMP) {\r\n                        controlStack[0].token = previousControl.token;\r\n                    }\r\n                    tokens.push(controlStack[0].token);\r\n                    if (m[1] === TOKEN_ELSEIF || m[1] === TOKEN_ELSEIFNOT) {\r\n                        controlStack[0].tokenIf = {\r\n                            op: OP_TEST,\r\n                            condition: getPipe(m[2]),\r\n                            negate: m[1] === TOKEN_ELSEIFNOT\r\n                        };\r\n                        tokens.push(controlStack[0].tokenIf);\r\n                    }\r\n                    break;\r\n                case TOKEN_FOREACH:\r\n                    controlStack.unshift({\r\n                        htmlStackCount: htmlStack.length,\r\n                        tokenIndex: tokens.length,\r\n                        tokenName: TOKEN_FOREACH,\r\n                        token: {\r\n                            op: OP_ITER,\r\n                            expression: getPipe(m[2])\r\n                        }\r\n                    });\r\n                    tokens.push(controlStack[0].token);\r\n                    break;\r\n                default:\r\n                    lastIndentWS = '';\r\n                    tokens.push({\r\n                        op: OP_EVAL,\r\n                        expression: getPipe(m[2]),\r\n                        noescape: m[1] === '&',\r\n                        indent: htmlStack.length - 1\r\n                    });\r\n            }\r\n        }\r\n        parseHTML(str.substr(lastIndex), 1);\r\n        for (var i = tokens.length - 1, j = 0; i >= 0; i--) {\r\n            if (tokens[i].indent !== undefined) {\r\n                j = tokens[i].indent;\r\n            } else {\r\n                tokens[i].indent = j;\r\n            }\r\n        }\r\n        tokens.value = str;\r\n        return tokens;\r\n    }\r\n\r\n    function evaluate(tokens, options, outstr) {\r\n        var output = [];\r\n        var objStack = options.objStack || [];\r\n        var iteratorStack = options.iteratorStack || [];\r\n        var result;\r\n\r\n        function Iterable(obj) {\r\n            this.keys = keys(obj);\r\n            this.values = obj;\r\n        }\r\n\r\n        function objAt(index) {\r\n            return objStack[index] instanceof Iterable ? objStack[index].values[objStack[index].keys[iteratorStack[index]]] : objStack[index];\r\n        }\r\n\r\n        function evaluateObjectPathPart(p, value) {\r\n            if (Array.isArray(p)) {\r\n                return string(evaluateObjectPath(p));\r\n            }\r\n            if (typeof p === 'object') {\r\n                return p.fn(value, p.arg);\r\n            }\r\n            return p;\r\n        }\r\n\r\n        function evaluateObjectPath(objectPath, acceptShorthand) {\r\n            if (!objectPath || !objectPath[0]) {\r\n                evaluateObjectPath.valid = true;\r\n                return objAt(0);\r\n            }\r\n            var value;\r\n            var valid = evaluateObjectPath.valid = acceptShorthand || !objectPath.evalMode || (objectPath[0].length > 1 && objectPath[0] !== '##');\r\n            switch (objectPath.evalMode) {\r\n                case EVAL_ITER_KEY:\r\n                    return objStack[0] instanceof Iterable ? objStack[0].keys[iteratorStack[0]] : iteratorStack[0];\r\n                case EVAL_ITER_INDEX:\r\n                    return iteratorStack[0];\r\n                case EVAL_ITER_COUNT:\r\n                    return objStack[0] instanceof Iterable ? objStack[0].keys.length : 0;\r\n                case EVAL_STACK:\r\n                    value = objAt(objectPath.stackIndex < 0 ? objectPath.stackIndex + objStack.length : objectPath.stackIndex || 0);\r\n                    break;\r\n                case EVAL_GLOBAL:\r\n                    value = options.globals;\r\n                    break;\r\n                case EVAL_NOW:\r\n                    value = +new Date();\r\n                    break;\r\n                case EVAL_TODAY:\r\n                    value = new Date();\r\n                    value.setHours(0, 0, 0, 0);\r\n                    value = +value;\r\n                    break;\r\n                case EVAL_RAND:\r\n                    value = Math.random();\r\n                    break;\r\n                default:\r\n                    var name = evaluateObjectPathPart(objectPath[0], value);\r\n                    for (var j = 0, length = objStack.length; j < length; j++) {\r\n                        value = objAt(j);\r\n                        if (hasProperty(value, name)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (j === objStack.length) {\r\n                        value = options.globals;\r\n                        if (!(name in value)) {\r\n                            evaluateObjectPath.valid = false;\r\n                            return;\r\n                        }\r\n                    }\r\n                    value = value[name];\r\n            }\r\n            for (var i = 1, len = objectPath.length; i < len && evallable(value); i++) {\r\n                value = value[evaluateObjectPathPart(objectPath[i], value)];\r\n            }\r\n            evaluateObjectPath.valid = valid;\r\n            return isFunction(value) ? undefined : value;\r\n        }\r\n\r\n        function evaluatePipe(pipe, start, end) {\r\n            start = start || 0;\r\n            end = end || pipe.length - 1;\r\n\r\n            var returnArray = [];\r\n            var input = evaluateObjectPath();\r\n            var i = start;\r\n            var resetPos = start;\r\n\r\n            var varargs = {\r\n                globals: options.globals,\r\n                eval: function (objectPath) {\r\n                    return evaluateObjectPath(cached(parseObjectPath, objectPath));\r\n                },\r\n                stop: function () {\r\n                    i = end + 1;\r\n                    return value;\r\n                },\r\n                push: function (value) {\r\n                    returnArray.push(value);\r\n                    return value;\r\n                },\r\n                reset: function () {\r\n                    resetPos = i;\r\n                    return varargs.next();\r\n                },\r\n                hasArgs: function () {\r\n                    return i <= end;\r\n                },\r\n                state: function () {\r\n                    return i > end ? 'end' : pipe[i].length() ? 'func' : pipe[i].canEvaluate === undefined ? 'auto' : pipe[i].canEvaluate ? 'path' : 'const';\r\n                },\r\n                raw: function () {\r\n                    return i <= end ? varargs.fn() || pipe[i++].value : undefined;\r\n                },\r\n                next: function (preferObject) {\r\n                    var reset = resetPos === i;\r\n                    if (i > end) {\r\n                        return reset ? input : undefined;\r\n                    }\r\n                    if (pipe[i].canEvaluate === false) {\r\n                        return pipe[i++].value;\r\n                    }\r\n                    var fn = varargs.fn();\r\n                    if (fn) {\r\n                        return fn(reset ? input : value);\r\n                    }\r\n                    var v = evaluateObjectPath(pipe[i].objectPath(), reset);\r\n                    if (pipe[i].canEvaluate || (evaluateObjectPath.valid && (reset || preferObject || !primitive(value) || primitive(v)))) {\r\n                        return (++i, v);\r\n                    }\r\n                    return reset ? input : pipe[i++].value;\r\n                },\r\n                fn: function (wrapFn) {\r\n                    var start = i;\r\n                    var len = i <= end && pipe[i].length();\r\n                    if (len) {\r\n                        i += len + 1;\r\n                        return function (obj, index) {\r\n                            try {\r\n                                objStack.unshift(arguments.length ? obj : value);\r\n                                iteratorStack.unshift(index);\r\n                                return evaluatePipe(pipe, start + 1, start + len - 1);\r\n                            } finally {\r\n                                objStack.shift();\r\n                                iteratorStack.shift();\r\n                            }\r\n                        };\r\n                    }\r\n                    if (isFunction(wrapFn)) {\r\n                        return wrapFn(varargs.next());\r\n                    }\r\n                }\r\n            };\r\n\r\n            var value = varargs.reset();\r\n            while (i <= end) {\r\n                var startpos = i;\r\n                var name = pipe[i++].textValue;\r\n                try {\r\n                    var func = pipes[name] || pipes.__default__(name);\r\n                    if (isFunction(func)) {\r\n                        if (func.varargs) {\r\n                            value = func.call(options.globals, value, varargs);\r\n                        } else {\r\n                            switch (func.length) {\r\n                                case 1:\r\n                                    value = func.call(options.globals, value);\r\n                                    break;\r\n                                case 2:\r\n                                    value = func.call(options.globals, value, varargs.next());\r\n                                    break;\r\n                                case 3:\r\n                                    value = func.call(options.globals, value, varargs.next(), varargs.next());\r\n                                    break;\r\n                                case 4:\r\n                                    value = func.call(options.globals, value, varargs.next(), varargs.next(), varargs.next());\r\n                                    break;\r\n                                default:\r\n                                    var args = new Array(func.length);\r\n                                    args[0] = value;\r\n                                    for (var j = 1, len = func.length; j < len; j++) {\r\n                                        args[j] = varargs.next();\r\n                                    }\r\n                                    value = func.apply(options.globals, args);\r\n                            }\r\n                        }\r\n                    } else if (isString(func)) {\r\n                        value = apply(value, func);\r\n                    } else if (startpos === resetPos) {\r\n                        value = pipe[i - 1].canEvaluate === false ? pipe[i - 1].value : undefined;\r\n                    } else {\r\n                        throw new Error('Invalid pipe function');\r\n                    }\r\n                } catch (e) {\r\n                    return console.warn(e.toString() + ' ' + formatCallSite(tokens.value, pipe.index, pipe.index + pipe.value.length, pipe[startpos].start, pipe[i - 1].end) + (e.stack || '').substr(e.toString().length));\r\n                }\r\n            }\r\n            return returnArray.length ? flatten(returnArray.concat(value)) : value;\r\n        }\r\n\r\n        try {\r\n            var i = options.start || 0;\r\n            var e = options.end || tokens.length;\r\n            var ws = false;\r\n            execStack.unshift(options);\r\n            while (i < e) {\r\n                var t = tokens[i++];\r\n                options.level = t.indent;\r\n                switch (t.op) {\r\n                    case OP_EVAL:\r\n                        var prevCount = evalCount;\r\n                        result = evaluatePipe(t.expression);\r\n                        if (evallable(result)) {\r\n                            outstr = outstr !== undefined;\r\n                            if (ws) {\r\n                                output.push(ws);\r\n                            }\r\n                            ws = undefined;\r\n                            output.push((evalCount !== prevCount || t.noescape || options.noEncode ? pass : escape)(string(result, json)));\r\n                        }\r\n                        break;\r\n                    case OP_ITER:\r\n                        objStack.unshift(new Iterable(evaluatePipe(t.expression)));\r\n                        iteratorStack.unshift(0);\r\n                        if (!objStack[0].keys.length) {\r\n                            i = t.index;\r\n                        }\r\n                        break;\r\n                    case OP_ITER_END:\r\n                        if (++iteratorStack[0] >= objStack[0].keys.length) {\r\n                            objStack.shift();\r\n                            iteratorStack.shift();\r\n                        } else {\r\n                            i = t.index;\r\n                        }\r\n                        break;\r\n                    case OP_TEST:\r\n                        if (!evaluatePipe(t.condition) ^ t.negate) {\r\n                            i = t.index;\r\n                        }\r\n                        break;\r\n                    case OP_JUMP:\r\n                        i = t.index;\r\n                        break;\r\n                    case OP_SPACE:\r\n                        if (!options.html) {\r\n                            output.push(t.ovalue);\r\n                        } else if (ws === false) {\r\n                            ws = undefined;\r\n                        } else if (t.value === NEWLINE && options.indent) {\r\n                            var k = NEWLINE + indent(options.indent, t.indent, options.indentPadding);\r\n                            if (k.indexOf(output[output.length - 1]) === 0) {\r\n                                output.pop();\r\n                            }\r\n                            output.push(k);\r\n                            ws = undefined;\r\n                        } else {\r\n                            ws = t.value;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (ws && !t.stripWS) {\r\n                            output.push(ws);\r\n                        }\r\n                        output.push(options.html === false ? t.nvalue : options.noEncode ? t.ovalue : t.value);\r\n                        outstr = true;\r\n                        ws = t.stripWSEnd ? false : undefined;\r\n                }\r\n            }\r\n        } finally {\r\n            evalCount = (evalCount + !!outstr) & 0xFFFF;\r\n            execStack.shift();\r\n        }\r\n        if (options.indent && options.indentPadding && !options.trimStart) {\r\n            output.unshift(options.indentPadding);\r\n        }\r\n        return outstr === true ? output.join('') : result;\r\n    }\r\n\r\n    function apply(data, str) {\r\n        return run(str, data, extend({}, execStack[0], {\r\n            indentPadding: undefined,\r\n            trimStart: true\r\n        }));\r\n    }\r\n\r\n    function getOptions(options, data) {\r\n        options = extend({}, waterpipe.defaultOptions, options || {});\r\n        return {\r\n            html: options.html !== false,\r\n            noEncode: options.html === false || options.noEncode,\r\n            indent: evallable(options.indent) ? indent(options.indent, 1) : '',\r\n            indentPadding: evallable(options.indentPadding) ? indent(options.indentPadding, 1) : execStack[0] ? indent(execStack[0].indent, execStack[0].level, execStack[0].indentPadding) : '',\r\n            trimStart: options.trimStart,\r\n            objStack: [data],\r\n            globals: inherit(waterpipe.globals, options.globals)\r\n        };\r\n    }\r\n\r\n    function run(str, data, options, outstr) {\r\n        str = string(str || '');\r\n        return evaluate(cached(parse, str), getOptions(options, data), outstr);\r\n    }\r\n\r\n    function waterpipe(str, data, options) {\r\n        return run(str, data, options, true);\r\n    }\r\n\r\n    waterpipe.defaultOptions = {};\r\n    waterpipe.globals = {};\r\n    waterpipe.string = string;\r\n    waterpipe.eval = function (str, data, options) {\r\n        var tokens = [{ op: OP_EVAL, expression: cached(parsePipe, str) }];\r\n        tokens.value = str;\r\n        return evaluate(tokens, getOptions(options, data));\r\n    };\r\n    waterpipe.pipes = extend(pipes, {\r\n        __default__: constFn(),\r\n        keys: keys,\r\n        max: Math.min,\r\n        min: Math.max,\r\n        abs: Math.abs,\r\n        round: Math.round,\r\n        floor: Math.floor,\r\n        ceil: Math.ceil,\r\n        asdate: asdate,\r\n        eval: apply,\r\n        as: function (obj, varargs) {\r\n            return (varargs.globals[string(varargs.raw())] = obj);\r\n        },\r\n        let: function (obj, varargs) {\r\n            while (varargs.hasArgs()) {\r\n                varargs.globals[string(varargs.raw())] = varargs.next();\r\n            }\r\n        },\r\n        more: function (a, b) {\r\n            return (compare(a, b, 1) > 0);\r\n        },\r\n        less: function (a, b) {\r\n            return (compare(a, b, 1) < 0);\r\n        },\r\n        ormore: function (a, b) {\r\n            return (compare(a, b, 1) >= 0);\r\n        },\r\n        orless: function (a, b) {\r\n            return (compare(a, b, 1) <= 0);\r\n        },\r\n        between: function (a, b, c) {\r\n            var d = compare(b, c, 1) >= 0 ? [c, b] : [b, c];\r\n            return (compare(a, d[0], 1) >= 0 && compare(a, d[1], 1) <= 0);\r\n        },\r\n        equals: function (a, b) {\r\n            return (string(a) === string(b));\r\n        },\r\n        notequals: function (a, b) {\r\n            return (string(a) !== string(b));\r\n        },\r\n        iequals: strargs(function (a, b) {\r\n            return a.toLowerCase() === b.toLowerCase();\r\n        }),\r\n        inotequals: strargs(function (a, b) {\r\n            return a.toLowerCase() !== b.toLowerCase();\r\n        }),\r\n        startswith: strargs(function (a, b) {\r\n            return b && a.substr(0, b.length) === b;\r\n        }),\r\n        endswith: strargs(function (a, b) {\r\n            return b && a.substr(-b.length) === b;\r\n        }),\r\n        even: function (num) {\r\n            return ((+num & 1) === 0);\r\n        },\r\n        odd: function (num) {\r\n            return ((+num & 1) === 1);\r\n        },\r\n        contains: function (str, needle) {\r\n            return (string(str).indexOf(needle) >= 0);\r\n        },\r\n        like: function (str, regex) {\r\n            regex = cached(parseRegExp, regex);\r\n            return (regex !== false && regex.test(str));\r\n        },\r\n        or: function (obj, val) {\r\n            return obj || val;\r\n        },\r\n        not: function (obj, varargs) {\r\n            return !(varargs.hasArgs() ? varargs.next() : obj);\r\n        },\r\n        choose: function (bool, trueValue, falseValue) {\r\n            return bool ? trueValue : falseValue;\r\n        },\r\n        test: function (obj, varargs) {\r\n            var testFn = varargs.next();\r\n            var trueFn = varargs.fn(constFn);\r\n            var falseFn = varargs.fn(constFn);\r\n            return testFn ? trueFn() : falseFn();\r\n        },\r\n        length: function (obj) {\r\n            return (evallable(obj) && +obj.length) || +obj || 0;\r\n        },\r\n        concat: function (a, b) {\r\n            return string(a) + string(b);\r\n        },\r\n        substr: function (str, start, len) {\r\n            return string(str).substr(start, len);\r\n        },\r\n        replace: function (str, varargs) {\r\n            var regex = string(varargs.next());\r\n            var fn = varargs.fn() || string(varargs.next());\r\n            return string(str).replace(cached(parseRegExp, regex) || regex, !fn.call ? fn : function () {\r\n                var m = slice.apply(null, arguments);\r\n                m.input = m.pop();\r\n                m.index = m.pop();\r\n                return string(fn(m));\r\n            });\r\n        },\r\n        trim: function (str) {\r\n            return string(str).replace(/^\\s+|\\s+$/g, '');\r\n        },\r\n        trimstart: function (str) {\r\n            return string(str).replace(/^\\s+/, '');\r\n        },\r\n        trimend: function (str) {\r\n            return string(str).replace(/\\s+$/, '');\r\n        },\r\n        padstart: strargs(function (str, needle) {\r\n            return str.substr(0, needle.length) !== needle ? needle + str : str;\r\n        }),\r\n        padend: strargs(function (str, needle) {\r\n            return str.substr(-needle.length) !== needle ? str + needle : str;\r\n        }),\r\n        removestart: strargs(function (str, needle) {\r\n            return str.substr(0, needle.length) === needle ? str.slice(needle.length) : str;\r\n        }),\r\n        removeend: strargs(function (str, needle) {\r\n            return str.substr(-needle.length) === needle ? str.slice(0, -needle.length) : str;\r\n        }),\r\n        cutbefore: strargs(function (str, needle) {\r\n            return str.substr(0, (str.indexOf(needle) + 1 || str.length + 1) - 1);\r\n        }),\r\n        cutbeforelast: strargs(function (str, needle) {\r\n            return str.substr(0, (str.lastIndexOf(needle) + 1 || str.length + 1) - 1);\r\n        }),\r\n        cutafter: strargs(function (str, needle) {\r\n            return str.substr(needle.length + (str.indexOf(needle) + 1 || -needle.length + 1) - 1);\r\n        }),\r\n        cutafterlast: strargs(function (str, needle) {\r\n            return str.substr(needle.length + (str.lastIndexOf(needle) + 1 || -needle.length + 1) - 1);\r\n        }),\r\n        split: function (str, separator) {\r\n            return where(string(str).split(separator), pass);\r\n        },\r\n        repeat: function (count, str) {\r\n            return repeat(str, count);\r\n        },\r\n        upper: function (str) {\r\n            return string(str).toUpperCase();\r\n        },\r\n        lower: function (str) {\r\n            return string(str).toLowerCase();\r\n        },\r\n        ucfirst: function (str) {\r\n            str = string(str);\r\n            return str.charAt(0).toUpperCase() + str.substr(1);\r\n        },\r\n        lcfirst: function (str) {\r\n            str = string(str);\r\n            return str.charAt(0).toLowerCase() + str.substr(1);\r\n        },\r\n        hyphenate: function (str) {\r\n            return cached(hyphenate, str);\r\n        },\r\n        plus: function (a, b) {\r\n            return (+a || 0) + (+b || 0);\r\n        },\r\n        minus: function (a, b) {\r\n            return (+a || 0) - (+b || 0);\r\n        },\r\n        multiply: function (a, b) {\r\n            return (+a || 0) * (+b || 0);\r\n        },\r\n        divide: function (a, b) {\r\n            return (+a || 0) / (+b || 0);\r\n        },\r\n        mod: function (a, b) {\r\n            return (+a || 0) % (+b || 0);\r\n        },\r\n        pow: function (a, b) {\r\n            return Math.pow(+a || 0, +b || 0);\r\n        },\r\n        to: function (a, b) {\r\n            var start = +a;\r\n            var end = +b;\r\n            var pattern;\r\n            var numDigit;\r\n            if (isNaN(start) || isNaN(end)) {\r\n                var re = /(\\d+|\\d*\\.\\d+)/;\r\n                pattern = string(a).replace(re, '0');\r\n                start = +RegExp.$1;\r\n                numDigit = RegExp.$1.length;\r\n                if (string(b).replace(re, '0') !== pattern) {\r\n                    return [a];\r\n                }\r\n                end = +RegExp.$1;\r\n            }\r\n            start = start || 0;\r\n            end = end || 0;\r\n            var arr = [];\r\n            var step = (end - start) / Math.abs(end - start);\r\n            var format = function (n) {\r\n                var m = Math.abs(n).toString();\r\n                return m.length < numDigit ? new Array(numDigit - m.length + 1).join('0') + m : m;\r\n            };\r\n            for (; (end - start) / step > 0; start += step) {\r\n                arr.push(pattern ? pattern.replace('0', format(start)) : start);\r\n            }\r\n            arr.push(pattern ? pattern.replace('0', format(end)) : end);\r\n            return arr;\r\n        },\r\n        join: function (arr, str) {\r\n            return [].concat(arr).join(string(str));\r\n        },\r\n        reverse: function (arr) {\r\n            return [].concat(arr).reverse();\r\n        },\r\n        sort: function (arr) {\r\n            return [].concat(arr).sort(compares[0]);\r\n        },\r\n        isort: function (arr) {\r\n            return [].concat(arr).sort(compares[1]);\r\n        },\r\n        rsort: function (arr) {\r\n            return [].concat(arr).sort(compares[2]);\r\n        },\r\n        irsort: function (arr) {\r\n            return [].concat(arr).sort(compares[3]);\r\n        },\r\n        slice: function (arr, a, b) {\r\n            return [].concat(arr).slice(a, b);\r\n        },\r\n        unique: function (arr) {\r\n            arr = [].concat(arr);\r\n            var hash = {};\r\n            var result = [];\r\n            for (var i = 0, length = arr.length; i < length; ++i) {\r\n                if (!hash.hasOwnProperty(arr[i])) {\r\n                    hash[arr[i]] = true;\r\n                    result.push(arr[i]);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        first: function (arr, varargs) {\r\n            return first(arr, detectKeyFn(varargs, arr));\r\n        },\r\n        any: function (arr, varargs) {\r\n            return !!first(arr, detectKeyFn(varargs, arr), true);\r\n        },\r\n        all: function (arr, varargs) {\r\n            return !first(arr, detectKeyFn(varargs, arr), true, true);\r\n        },\r\n        none: function (arr, varargs) {\r\n            return !first(arr, detectKeyFn(varargs, arr), true);\r\n        },\r\n        where: function (arr, varargs) {\r\n            return where(arr, detectKeyFn(varargs, arr));\r\n        },\r\n        map: function (arr, varargs) {\r\n            return where(arr, constFn(true), detectKeyFn(varargs, arr));\r\n        },\r\n        sum: function (arr, varargs) {\r\n            var result;\r\n            var fn = varargs.fn() || ((result = varargs.next()), varargs.fn() || (varargs.hasArgs() ? detectKeyFn(varargs, arr) : pass));\r\n            each(arr, function (i, v) {\r\n                result = result !== undefined ? result + fn(v, i) : fn(v, i);\r\n            });\r\n            return result;\r\n        },\r\n        sortby: function (arr, varargs) {\r\n            return sortby(arr, varargs, compares[0]);\r\n        },\r\n        isortby: function (arr, varargs) {\r\n            return sortby(arr, varargs, compares[1]);\r\n        },\r\n        rsortby: function (arr, varargs) {\r\n            return sortby(arr, varargs, compares[2]);\r\n        },\r\n        irsortby: function (arr, varargs) {\r\n            return sortby(arr, varargs, compares[3]);\r\n        },\r\n        groupby: function (arr, varargs) {\r\n            var result = {};\r\n            var fn = detectKeyFn(varargs, arr);\r\n            each(arr, function (i, v) {\r\n                var key = string(fn(v, i));\r\n                if (!result.hasOwnProperty(key)) {\r\n                    result[key] = arr.push ? [] : {};\r\n                }\r\n                result[key][arr.push ? result[key].length : i] = v;\r\n            });\r\n            return result;\r\n        },\r\n        addtime: function (obj, span) {\r\n            obj = asdate(obj);\r\n            if (!evallable(obj)) {\r\n                return obj;\r\n            }\r\n            var args = cached(parseTimeRange, span);\r\n            return +new Date(\r\n                args[0] + obj.getFullYear(),\r\n                args[1] + obj.getMonth(),\r\n                args[2] + obj.getDate(),\r\n                args[3] + obj.getHours(),\r\n                args[4] + obj.getMinutes(),\r\n                args[5] + obj.getSeconds(),\r\n                args[6] + obj.getMilliseconds()\r\n            );\r\n        },\r\n        in: function (value, varargs) {\r\n            var b = varargs.next(true);\r\n            return Array.isArray(b) ? b.indexOf(value) >= 0 : !!b && typeof b === 'object' && value in b;\r\n        },\r\n        '??': function (a, b) {\r\n            return a !== null && a !== undefined ? a : b;\r\n        },\r\n        '!!': function (obj, varargs) {\r\n            return !!(varargs.hasArgs() ? varargs.next() : obj);\r\n        },\r\n        '&&': function (value, varargs) {\r\n            return value ? varargs.reset() : varargs.stop();\r\n        },\r\n        '||': function (value, varargs) {\r\n            return !value ? varargs.reset() : varargs.stop();\r\n        },\r\n        '|': function (value, varargs) {\r\n            varargs.push(value);\r\n            return varargs.reset();\r\n        },\r\n        ':json': function (value) {\r\n            return JSON.stringify(value);\r\n        },\r\n        ':query': function (obj) {\r\n            var arr = internals.buildParams([], obj);\r\n            return arr.join(\"&\").replace(/%20/g, \"+\");\r\n        },\r\n        ':date': function (obj, format) {\r\n            var date = obj instanceof Date ? obj : typeof obj === 'number' ? new Date(obj) : new Date(Date.parse(obj));\r\n            return isNaN(date) ? '' : internals.formatDate(date, format, this.DATE_LABELS);\r\n        },\r\n        ':printf': function (obj, format) {\r\n            return internals.sprintf(format, obj);\r\n        }\r\n    });\r\n    ('|>eval ?test !not +plus -minus *multiply /divide %mod ^pow ==equals !=notequals ~=iequals !~=inotequals ^=startswith $=endswith *=contains <less <=orless >more >=ormore ..to ?:choose &concat').replace(/(\\W{1,3})(\\S+)\\s?/g, function (v, a, b) {\r\n        pipes[a] = pipes[b];\r\n    });\r\n    each('where first any all none sum map test not sortby isortby rsortby irsortby groupby replace as let in !! && || |'.split(' '), function (i, v) {\r\n        pipes[v].varargs = true;\r\n    });\r\n\r\n    pipes.__default__ = (function (previous) {\r\n        return function (name) {\r\n            if (name.charAt(0) === '%') {\r\n                return function (obj) {\r\n                    return internals.sprintf(name, obj);\r\n                };\r\n            }\r\n            return previous(name);\r\n        };\r\n    }(pipes.__default__));\r\n\r\n    /*! jquery.js | Copyright jQuery Foundation and other contributors | Released under the MIT license */\r\n    /* istanbul ignore next */\r\n    (function (e) {\r\n        e.buildParams = function buildParams(arr, obj, prefix) {\r\n            if (prefix && Array.isArray(obj)) {\r\n                for (var i = 0, len = obj.length; i < len; i++) {\r\n                    if (/\\[\\]$/.test(prefix)) {\r\n                        arr[arr.length] = encodeURIComponent(prefix) + '=' + encodeURIComponent(obj[i]);\r\n                    } else {\r\n                        buildParams(arr, obj[i], prefix + \"[\" + (typeof obj[i] === \"object\" && obj[i] ? i : \"\") + \"]\");\r\n                    }\r\n                }\r\n            } else if (typeof obj === \"object\") {\r\n                for (var name in obj) {\r\n                    buildParams(arr, obj[name], prefix ? prefix + \"[\" + name + \"]\" : name);\r\n                }\r\n            } else {\r\n                arr[arr.length] = encodeURIComponent(prefix) + '=' + encodeURIComponent(obj);\r\n            }\r\n            return arr;\r\n        }\r\n    }(internals));\r\n\r\n    /*! sprintf.js | Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro> | 3 clause BSD license */\r\n    /* istanbul ignore next */\r\n    (function (e) {\r\n        function r(e) {\r\n            return Object.prototype.toString.call(e).slice(8, -1).toLowerCase()\r\n        }\r\n\r\n        function i(e, t) {\r\n            for (var n = []; t > 0; n[--t] = e);\r\n            return n.join(\"\")\r\n        }\r\n        var t = function () {\r\n            return t.cache.hasOwnProperty(arguments[0]) || (t.cache[arguments[0]] = t.parse(arguments[0])), t.format.call(null, t.cache[arguments[0]], arguments)\r\n        };\r\n        t.format = function (e, n) {\r\n            var s = 1,\r\n                o = e.length,\r\n                u = \"\",\r\n                a, f = [],\r\n                l, c, h, p, d, v;\r\n            for (l = 0; l < o; l++) {\r\n                u = r(e[l]);\r\n                if (u === \"string\") f.push(e[l]);\r\n                else if (u === \"array\") {\r\n                    h = e[l];\r\n                    if (h[2]) {\r\n                        a = n[s];\r\n                        for (c = 0; c < h[2].length; c++) {\r\n                            if (!a.hasOwnProperty(h[2][c])) throw t('[sprintf] property \"%s\" does not exist', h[2][c]);\r\n                            a = a[h[2][c]]\r\n                        }\r\n                    } else h[1] ? a = n[h[1]] : a = n[s++];\r\n                    if (/[^s]/.test(h[8]) && r(a) != \"number\") throw t(\"[sprintf] expecting number but found %s\", r(a));\r\n                    switch (h[8]) {\r\n                        case \"b\":\r\n                            a = a.toString(2);\r\n                            break;\r\n                        case \"c\":\r\n                            a = String.fromCharCode(a);\r\n                            break;\r\n                        case \"d\":\r\n                            a = parseInt(a, 10);\r\n                            break;\r\n                        case \"e\":\r\n                            a = h[7] ? a.toExponential(h[7]) : a.toExponential();\r\n                            break;\r\n                        case \"f\":\r\n                            a = h[7] ? parseFloat(a).toFixed(h[7]) : parseFloat(a);\r\n                            break;\r\n                        case \"o\":\r\n                            a = a.toString(8);\r\n                            break;\r\n                        case \"s\":\r\n                            a = (a = String(a)) && h[7] ? a.substring(0, h[7]) : a;\r\n                            break;\r\n                        case \"u\":\r\n                            a >>>= 0;\r\n                            break;\r\n                        case \"x\":\r\n                            a = a.toString(16);\r\n                            break;\r\n                        case \"X\":\r\n                            a = a.toString(16).toUpperCase()\r\n                    }\r\n                    a = /[def]/.test(h[8]) && h[3] && a >= 0 ? \"+\" + a : a, d = h[4] ? h[4] == \"0\" ? \"0\" : h[4].charAt(1) : \" \", v = h[6] - String(a).length, p = h[6] ? i(d, v) : \"\", f.push(h[5] ? a + p : p + a)\r\n                }\r\n            }\r\n            return f.join(\"\")\r\n        }, t.cache = {}, t.parse = function (e) {\r\n            var t = e,\r\n                n = [],\r\n                r = [],\r\n                i = 0;\r\n            while (t) {\r\n                if ((n = /^[^\\x25]+/.exec(t)) !== null) r.push(n[0]);\r\n                else if ((n = /^\\x25{2}/.exec(t)) !== null) r.push(\"%\");\r\n                else {\r\n                    if ((n = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(t)) === null) throw \"[sprintf] huh?\";\r\n                    if (n[2]) {\r\n                        i |= 1;\r\n                        var s = [],\r\n                            o = n[2],\r\n                            u = [];\r\n                        if ((u = /^([a-z_][a-z_\\d]*)/i.exec(o)) === null) throw \"[sprintf] huh?\";\r\n                        s.push(u[1]);\r\n                        while ((o = o.substring(u[0].length)) !== \"\")\r\n                            if ((u = /^\\.([a-z_][a-z_\\d]*)/i.exec(o)) !== null) s.push(u[1]);\r\n                            else {\r\n                                if ((u = /^\\[(\\d+)\\]/.exec(o)) === null) throw \"[sprintf] huh?\";\r\n                                s.push(u[1])\r\n                            }\r\n                        n[2] = s\r\n                    } else i |= 2;\r\n                    if (i === 3) throw \"[sprintf] mixing positional and named placeholders is not (yet) supported\";\r\n                    r.push(n)\r\n                }\r\n                t = t.substring(n[0].length)\r\n            }\r\n            return r\r\n        };\r\n        var n = function (e, n, r) {\r\n            return r = n.slice(0), r.splice(0, 0, e), t.apply(null, r)\r\n        };\r\n        e.sprintf = t, e.vsprintf = n\r\n    })(internals);\r\n\r\n    /*! formatdate.js | Copyright misonou | Released under the MIT license */\r\n    (function (e) {\r\n        'use strict';\r\n\r\n        var standardFormat = {\r\n            d: 'MM/dd/yyyy',\r\n            D: 'dddd, dd MMMM yyyy',\r\n            f: 'dddd, dd MMMM yyyy HH:mm',\r\n            F: 'dddd, dd MMMM yyyy HH:mm:ss',\r\n            g: 'MM/dd/yyyy HH:mm',\r\n            G: 'MM/dd/yyyy HH:mm:ss',\r\n            m: 'MMMM dd',\r\n            M: 'MMMM dd',\r\n            o: 'yyyy\\\\-MM\\\\-dd\\\\THH\\\\:mm\\\\:ss\\\\.fffffffK',\r\n            O: 'yyyy\\\\-MM\\\\-dd\\\\THH\\\\:mm\\\\:ss\\\\.fffffffK',\r\n            r: 'ddd, dd MMM yyyy HH\\\\:mm\\\\:ss \\\\G\\\\M\\\\T',\r\n            R: 'ddd, dd MMM yyyy HH\\\\:mm\\\\:ss \\\\G\\\\M\\\\T',\r\n            s: 'yyyy\\\\-MM\\\\-dd\\\\THH\\\\:mm\\\\:ss',\r\n            t: 'HH:mm',\r\n            T: 'HH:mm:ss',\r\n            u: 'yyyy\\\\-MM\\\\-dd HH\\\\:mm\\\\:ss\\\\Z',\r\n            U: 'dddd, dd MMMM yyyy HH:mm:ss',\r\n            y: 'yyyy MMMM',\r\n            Y: 'yyyy MMMM'\r\n        };\r\n        var defaultTranslations = {\r\n            shortWeekday: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n            longWeekday: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n            shortMonth: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            longMonth: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            designator: ['AM', 'PM'],\r\n            era: ['B.C.', 'A.D.'],\r\n            timeSeparator: ':',\r\n            dateSeparator: '/'\r\n        };\r\n\r\n        function padZero(num, len) {\r\n            num = String(num);\r\n            return num.length >= len ? num : (new Array(len + 1).join('0') + num).substr(-len);\r\n        }\r\n\r\n        function formatDate(date, format, translationsOverride) {\r\n            format = standardFormat[format] || format || '';\r\n            translationsOverride = translationsOverride || {};\r\n            var translations = {};\r\n            for (var i in defaultTranslations) {\r\n                translations[i] = translationsOverride[i] || defaultTranslations[i];\r\n            }\r\n\r\n            function getString(specifier) {\r\n                var len = specifier.length;\r\n                switch (specifier.charAt(0)) {\r\n                    case 'd':\r\n                        return len === 4 ? translations.longWeekday[date.getDay()] : len === 3 ? translations.shortWeekday[date.getDay()] : padZero(date.getDate(), len);\r\n                    case 'f':\r\n                    case 'F':\r\n                        var str = (date.getMilliseconds() + '000000').substr(0, len);\r\n                        return specifier.charAt(0) === 'f' || !/^0+$/.test(str) ? str : '';\r\n                    case 'g':\r\n                        return translations.era[+(date.getFullYear() >= 0)];\r\n                    case 'h':\r\n                        return padZero((date.getHours() % 12) || 12, len);\r\n                    case 'H':\r\n                        return padZero(date.getHours(), len);\r\n                    case 'm':\r\n                        return padZero(date.getMinutes(), len);\r\n                    case 'M':\r\n                        return len === 4 ? translations.longMonth[date.getMonth()] : len === 3 ? translations.shortMonth[date.getMonth()] : padZero(date.getMonth() + 1, len);\r\n                    case 's':\r\n                        return padZero(date.getSeconds(), len);\r\n                    case 't':\r\n                        return translations.designator[+(date.getHours() >= 12)].substr(0, len);\r\n                    case 'y':\r\n                        return padZero(len >= 3 ? date.getFullYear() : date.getYear(), len);\r\n                    case 'K':\r\n                    case 'z':\r\n                        var offset = date.getTimezoneOffset();\r\n                        return len === 3 || specifier === 'K' ?\r\n                            (offset >= 0 ? '-' : '+') + padZero(Math.abs(offset / 60) | 0, 2) + ':' + padZero((Math.abs(offset) % 60), 2) :\r\n                            (offset >= 0 ? '-' : '+') + padZero(Math.abs(offset / 60) | 0, len);\r\n                    case ':':\r\n                        return translations.timeSeparator;\r\n                    case '/':\r\n                        return translations.dateSeparator;\r\n                }\r\n            }\r\n\r\n            var arr = [];\r\n            var m, r = /%?(?:(?!\\\\)(d{1,4}|f{1,7}|F{1,7}|g{1,2}|h{1,2}|H{1,2}|K|m{1,2}|M{1,4}|s{1,2}|t{1,2}|y{1,5}|z{1,3}|\\:|\\/))|\\\\?(.)/g;\r\n            while ((m = r.exec(format)) !== null) {\r\n                arr.push(m[1] ? getString(m[1]) : m[2]);\r\n            }\r\n            return arr.join('');\r\n        }\r\n\r\n        e.formatDate = formatDate;\r\n    })(internals);\r\n\r\n    /* istanbul ignore next */\r\n    if (!Array.isArray) {\r\n        Array.isArray = function (arg) {\r\n            return Object.prototype.toString.call(arg) === '[object Array]';\r\n        };\r\n    }\r\n    /* istanbul ignore next */\r\n    if (typeof document !== 'undefined' && document.querySelectorAll) {\r\n        each(document.querySelectorAll('script[type=\"text/x-waterpipe\"]'), function (i, v) {\r\n            pipes[v.id] = v.innerHTML;\r\n        });\r\n    }\r\n    /* istanbul ignore next */\r\n    if (typeof module === 'object') {\r\n        waterpipe.with = function () {\r\n            return waterpipe;\r\n        };\r\n    }\r\n    return waterpipe;\r\n})();\r\n\r\nexport default waterpipe;\r\n"],"names":[],"sourceRoot":""}